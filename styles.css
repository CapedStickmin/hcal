*, *::before, *::after {
    box-sizing: border-box;
    font-family: 'Segoe UI', sans-serif;
    font-weight: normal;
}

body {
    margin: 0;
    padding: 0;
    background-color: #000;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    position: relative;
}

/* Stars background */
body::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: 
        radial-gradient(white, rgba(255,255,255,.2) 2px, transparent 2px),
        radial-gradient(white, rgba(255,255,255,.15) 1px, transparent 1px),
        radial-gradient(white, rgba(255,255,255,.1) 2px, transparent 2px);
    background-size: 550px 550px, 350px 350px, 250px 250px;
    background-position: 0 0, 40px 60px, 130px 270px;
    animation: twinkle 8s linear infinite, moveStars 60s linear infinite;
    z-index: 1;
}

@keyframes twinkle {
    0% { opacity: 0.5; }
    50% { opacity: 1; }
    100% { opacity: 0.5; }
}

@keyframes moveStars {
    0% { background-position: 0 0, 40px 60px, 130px 270px; }
    100% { background-position: 100px 100px, 140px 160px, 230px 370px; }
}

/* Blue smoke effect */
body::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: 
        radial-gradient(circle at 20% 30%, rgba(0, 123, 255, 0.2) 0%, transparent 50%),
        radial-gradient(circle at 80% 70%, rgba(0, 123, 255, 0.15) 0%, transparent 50%),
        radial-gradient(circle at 50% 50%, rgba(0, 123, 255, 0.1) 0%, transparent 50%);
    filter: blur(60px);
    animation: smoke 15s ease-in-out infinite alternate, moveSmoke 30s ease-in-out infinite alternate;
    z-index: 2;
}

@keyframes smoke {
    0% { transform: scale(1) rotate(0deg); }
    50% { transform: scale(1.2) rotate(5deg); }
    100% { transform: scale(1) rotate(-5deg); }
}

@keyframes moveSmoke {
    0% { background-position: 0% 0%; }
    100% { background-position: 100% 100%; }
}

.calculator {
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    border-radius: 20px;
    border: 1px solid rgba(0, 123, 255, 0.3);
    box-shadow: 
        0 0 20px rgba(0, 123, 255, 0.2),
        0 0 40px rgba(0, 123, 255, 0.1),
        inset 0 0 20px rgba(0, 123, 255, 0.1);
    padding: 25px;
    width: 380px;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 15px;
    position: relative;
    z-index: 3;
    animation: float 6s ease-in-out infinite;
}

@keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
}

.display {
    grid-column: 1 / -1;
    background: rgba(0, 0, 0, 0.8);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    padding: 25px;
    border-radius: 15px;
    margin-bottom: 15px;
    text-align: right;
    word-wrap: break-word;
    word-break: break-all;
    border: 1px solid rgba(0, 123, 255, 0.3);
    box-shadow: 
        0 0 15px rgba(0, 123, 255, 0.2),
        inset 0 0 10px rgba(0, 123, 255, 0.1);
    position: relative;
    overflow: hidden;
}

.display::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        45deg,
        transparent,
        rgba(0, 123, 255, 0.1),
        transparent
    );
    transform: rotate(45deg);
    animation: shine 3s infinite;
}

@keyframes shine {
    0% { transform: translateX(-100%) rotate(45deg); }
    100% { transform: translateX(100%) rotate(45deg); }
}

.previous-operand {
    color: rgba(0, 123, 255, 0.7);
    font-size: 1.2rem;
    min-height: 24px;
}

.current-operand {
    color: white;
    font-size: 2.5rem;
    font-weight: bold;
    text-shadow: 0 0 10px rgba(0, 123, 255, 0.5);
}

/* Number animation in display */
@keyframes numberAppear {
    0% { 
        transform: translateY(20px);
        opacity: 0;
    }
    100% { 
        transform: translateY(0);
        opacity: 1;
    }
}

.number-appear {
    animation: numberAppear 0.3s ease forwards;
}

/* Equals result animation */
@keyframes equalsResult {
    0% { 
        transform: scale(0.8);
        opacity: 0;
    }
    50% { 
        transform: scale(1.2);
        opacity: 0.5;
    }
    100% { 
        transform: scale(1);
        opacity: 1;
    }
}

.equals-result {
    animation: equalsResult 0.8s ease forwards;
}

/* Equals button effect */
@keyframes equalsEffect {
    0% { 
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        transform: scale(1);
    }
    50% { 
        box-shadow: 0 0 30px rgba(0, 123, 255, 0.8);
        transform: scale(1.1);
    }
    100% { 
        box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        transform: scale(1);
    }
}

.equals-effect {
    animation: equalsEffect 1s ease;
}

button {
    font-size: 1.5rem;
    border: none;
    outline: none;
    background: rgba(0, 0, 0, 0.6);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(5px);
    padding: 20px;
    cursor: pointer;
    border-radius: 15px;
    transition: all 0.3s ease;
    color: white;
    border: 1px solid rgba(0, 123, 255, 0.3);
    text-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
    position: relative;
    overflow: hidden;
}

button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(0, 123, 255, 0.2),
        transparent
    );
    transition: 0.5s;
}

button:hover::before {
    left: 100%;
}

button:hover {
    background: rgba(0, 123, 255, 0.2);
    transform: translateY(-5px) scale(1.05);
    box-shadow: 
        0 5px 15px rgba(0, 123, 255, 0.3),
        0 0 20px rgba(0, 123, 255, 0.2);
}

button:active {
    transform: translateY(0) scale(0.95);
}

/* Number button animation */
.number:active {
    animation: jumpNumber 0.5s ease;
}

@keyframes jumpNumber {
    0% { transform: translateY(0); }
    50% { transform: translateY(-20px); }
    100% { transform: translateY(0); }
}

/* Operator button animation */
.operator:active {
    animation: pulseOperator 0.5s ease;
}

@keyframes pulseOperator {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

/* Equals button animation */
.equals:active {
    animation: glowEquals 0.5s ease;
}

@keyframes glowEquals {
    0% { box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); }
    50% { box-shadow: 0 0 20px rgba(0, 123, 255, 0.8); }
    100% { box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); }
}

.span-two {
    grid-column: span 2;
}

.operator {
    background: rgba(0, 123, 255, 0.2);
    color: #00ffff;
    font-weight: bold;
}

.equals {
    background: rgba(0, 123, 255, 0.3);
    color: white;
    font-weight: bold;
}

.equals:hover {
    background: rgba(0, 123, 255, 0.4);
}

.clear, .delete {
    background: rgba(255, 0, 0, 0.3);
    color: white;
    font-weight: bold;
}

.clear:hover, .delete:hover {
    background: rgba(255, 0, 0, 0.4);
}

/* Add smooth transitions for all interactive elements */
* {
    transition: all 0.3s ease;
}

.delete {
    background: rgba(255, 0, 0, 0.3);
    color: white;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
} 